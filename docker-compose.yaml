version: '3.7'

services:
  zookeeper:
    image: 'docker.io/bitnami/zookeeper:3-debian-10'
    ports:
      - '2181:2181'
    volumes:
      - 'zookeeper_data:/bitnami'
    environment:
      - ALLOW_ANONYMOUS_LOGIN=yes
    networks:
      - backend
  
  kafka:
    image: 'docker.io/bitnami/kafka:2-debian-10'
    ports:
      - '9092:9092'
      - '29092:29092'
    volumes:
      - 'kafka_data:/bitnami'
    environment:
      - KAFKA_CFG_ZOOKEEPER_CONNECT=zookeeper:2181
      - ALLOW_PLAINTEXT_LISTENER=yes
      - KAFKA_LISTENER_SECURITY_PROTOCOL_MAP=PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
      - KAFKA_LISTENERS=PLAINTEXT://:9092,PLAINTEXT_HOST://:29092
      - KAFKA_ADVERTISED_LISTENERS=PLAINTEXT://kafka:9092,PLAINTEXT_HOST://localhost:29092
    depends_on:
      - zookeeper
    networks:
      - backend

  mongodb:
    image: 'docker.io/bitnami/mongodb:4.4-debian-10'
    ports:
      - "27017:27017"
    volumes:
      - 'mongodb_data:/bitnami/mongodb'
    environment:
      # Password for user "root"
      - MONGODB_ROOT_PASSWORD=mongoroot
      - MONGODB_DATABASE=loanservice
      - MONGODB_USERNAME=mongouser
      - MONGODB_PASSWORD=mongopassword
    networks:
      - backend

  postgresql:
    image: 'postgres:9.6'
    ports:
      - '5432:5432'
    volumes:
      - 'postgresql_data:/var/lib/postgresql/data'
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgresroot
      POSTGRES_DB: emiservice
      POSTGRES_HOST_AUTH_METHOD: trust
    networks:
      - backend

  loan-service:
    build: ./loan-service/
    image: 'loan-service:latest'
    ports:
      - '9000:9000'
    environment:
      KAFKA_HOST: kafka
      KAFKA_PORT: 9092
      KAFKA_TOPIC: loan
      MONGODB_HOST: mongodb
      MONGODB_PORT: 27017
      MONGODB_USER: mongouser
      MONGODB_PASSWORD: mongopassword
      MONGODB_DB: loanservice
    networks:
      - backend
    depends_on:
      - zookeeper
      - kafka
      - mongodb

  emi-service:
    build: ./emi-service/
    image: 'emi-service:latest'
    ports:
      - '9010:9010'
    environment:
      KAFKA_HOST: kafka
      KAFKA_PORT: 9092
      KAFKA_TOPIC: loan
      POSTGRES_HOST: postgresql
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgresroot
      POSTGRES_DB: emiservice
    networks:
      - backend
    depends_on:
      - zookeeper
      - kafka
      - postgresql
      - loan-service

networks:
  backend:
    driver: bridge

volumes:
  zookeeper_data:
    driver: local
  kafka_data:
    driver: local
  mongodb_data:
    driver: local
  postgresql_data:
    driver: local
